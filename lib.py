# -*- coding= utf-8 -*-

OBJ_TYPE = {
    b'BRDG'     : 'obj_bridge'      ,
    b'BUIL'     : 'obj_building'    ,
    b'CCAR'     : 'obj_citycar'     ,
    b'CRSS'     : 'obj_crossing'    ,
    b'CURS'     : 'obj_cursor'      ,
    b'FACT'     : 'obj_factory'     ,
    b'FFIE'     : 'obj_ffield'      ,
    b'FFCL'     : 'obj_ffldclass'   ,
    b'FIEL'     : 'obj_field'       ,
    b'FPRO'     : 'obj_fproduct'    ,
    b'FSMO'     : 'obj_fsmoke'      ,
    b'FSUP'     : 'obj_fsupplier'   ,
    b'GOOD'     : 'obj_good'        ,
    b'GRND'     : 'obj_ground'      ,
    b'GOBJ'     : 'obj_groundobj'   ,
    b'IMG\x00'  : 'obj_image'       ,
    b'IMG1'     : 'obj_imagelist'   ,
    b'IMG2'     : 'obj_imagelist'   ,
    b'MENU'     : 'obj_menu'        ,
    b'MISC'     : 'obj_miscimages'  ,
    b'PASS'     : 'obj_pedestrian'  ,
    b'SIGN'     : 'obj_roadsign'    ,
    b'ROOT'     : 'obj_root'        ,
    b'SMOK'     : 'obj_smoke'       ,
    b'SOUN'     : 'obj_sound'       ,
    b'SYMB'     : 'obj_symbol'      ,
    b'TEXT'     : 'obj_text'        ,
    b'TILE'     : 'obj_tile'        ,
    b'TREE'     : 'obj_tree'        ,
    b'TUNL'     : 'obj_tunnel'      ,
    b'VHCL'     : 'obj_vehicle'     ,
    b'WAY\x00'  : 'obj_way'         ,
    b'WYOB'     : 'obj_way'         ,
    b'XREF'     : 'obj_xref'
}

VHCLparam = (
#               attrname,   type,       hook,            version,    None
    lambda v:  ('cost',     'uint32',   lambda x: x/100) if v > 0    else None,
    lambda v:  ('payload',  'uint16',   lambda x: x)     if v > 0    else None,
    lambda v:  ('load_time','uint16',   lambda x: x)     if v > 8    else None,
    lambda v:  ('top_speed','uint16',   lambda x: x)     if v > 0    else None,
    lambda v:  ('weight',   'uint32',   lambda x: x/1000)if v > 11   else None,
    lambda v:  ('weight',   'uint16',   lambda x: x)     if v < 11   else None,
    lambda v:  ('axle_load','uint16',   lambda x: x)     if v > 8    else None,
    lambda v:  ('power',    'uint32',   lambda x: x)     if v > 5    else None,
    lambda v:  ('power',    'uint16',   lambda x: x)     if v < 6    else None,
    lambda v:  ('run_cost', 'uint16',   lambda x: x/100) if v > 0    else None,
    lambda v:  ('fix_cost', 'uint32',   lambda x: x/100) if v > 10   else None,
    lambda v:  ('fix_cost', 'uint16',   lambda x: x/100) if 11> v >8 else None,
    lambda v:  ('intro',    'uint16',   lambda x: x)     if v > 0    else None,
    lambda v:  ('retire',   'uint16',   lambda x: x)     if v > 2    else None,
    lambda v:  ('gear',     'uint16',   lambda x: x)     if v > 5    else None,
    lambda v:  ('gear',     'uint8',    lambda x: x)     if v < 6    else None,
    lambda v:  ('waytype',  'uint8',    lambda x: x)     if v > 0    else None,
    lambda v:  ('sound',    'sint8',    lambda x: x)     if v > 0    else None,
    lambda v:  ('engine',   'uint8',    lambda x: x)     if v > 0    else None,
    lambda v:  ('length',   'uint8',    lambda x: x)     if v > 6    else None,
    lambda v:  ('const_pr', 'uint8',    lambda x: x)     if v > 0    else None,
    lambda v:  ('const_nx', 'uint8',    lambda x: x)     if v > 0    else None,
    lambda v:  ('frei_imag','uint8',    lambda x: x)     if v > 7    else None,
)
